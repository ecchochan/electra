# cython: profile=False, embedsignature=True, boundscheck=False, wraparound=False, nonecheck=False, cdivision=True

'''

python3 -c "from Cython.Build import cythonize;from distutils.core import setup;from distutils.extension import Extension;import sys;sys.argv = [sys.argv[0]] + ['build_ext','--inplace'];setup(ext_modules = cythonize('lang_utils.pyx',compiler_directives={'boundscheck': False,'wraparound':False,'initializedcheck': False,'infer_types': True},annotate=False))"

'''


cdef int UNICODE_LANG_MAP[1114112]
cdef int CN_MAP[1114112]
cdef int e
cdef int arabic_low = 1536
cdef int arabic_upp = 1791
cdef int thai_low = 3584
cdef int thai_upp = 3711
cdef int jap_low = 12353
cdef int jap_upp = 12543
cdef int kor_low = 12593
cdef int kor_upp = 12684
cdef int chin_low = ord('\u4e00')
cdef int chin_upp = ord('\u9fff')
cdef int kor2_low = 44032
cdef int kor2_upp = 55203
cdef int hindi_low = 2304
cdef int hindi_upp = 2431
cdef int kannada_low = 3200
cdef int kannada_upp = 3327
cdef int UNICODE_LANG_EN = 1
cdef int UNICODE_LANG_AR = 2
cdef int UNICODE_LANG_TH = 3
cdef int UNICODE_LANG_JP = 4
cdef int UNICODE_LANG_KO = 5
cdef int UNICODE_LANG_CH = 6
cdef int UNICODE_LANG_HI = 7
cdef int UNICODE_LANG_KN = 8

    
for e in range(1114112):
    UNICODE_LANG_MAP[e] = 0
    CN_MAP[e] = 0
for k in '躏𠴛缱嵘获鸷𤠋蹒𠋆鹬橼𡺃铻𪠺𠵾殓绗𫔋锷𥁢灯𫁳𢛯剐绊黄随椮缉𫛺嫒踬缥坂骝锟辏𩟿诰𨸆摇绯𣗊络𫗉𥺅𫚙视实𥮾锐𫐎摊宁韦𫗟玑𫚣縆𫞛夹𫎱𣘐严凿䜣烧厌绱饤龋㱮𫜭𫍢筼𪉐𫏃溃𫓸册还锊动颟协讣钻坞骉饾吣抬湿𫞣鹞𤈷惩镛𫀨赀荆馅妪鹈𫗚铩悮魉锩苌问弑䟢结鳡涝𫚚鳙权𪶄𣷷𫚞烛聋艺𣶭发馕龛𪺽𪢮撺𠆿𫁷时询钳酾𫍻𫓬争贳钮黉畴𫐖𫘬锝黾赞赎诧䑽瑷龄荣鳁浍疡镰韵枭浑𨁴𫍱掷钫觞笃钽𫜔𫜰𫞷徕从骠椁复硷驮绮𩧴怂𩧼𫎺𩴌𫏐仅𫞨㛣荭鼌𫍬䴕箧𫜙赊崄𫍯锥顿鲉败涛硚叇缴𫚒杩𫁟𦰴䃅炝桡祃赐绣宽桧𫔐鳄𫟽𧹔𫜅陕骄蔹𩨃阛鲷刾𨸟𡝠虿碱锁𠉂㑩顸鸦骓鿒𫄭𩨄奋饮滥𫈉伡鳔润鹭皱鸧维镭鱾卧陇𧹕𬸪䦁悫樱𤩽挝隽轮鹒缦鸽䭪𩠏钺懔乡𢙒纟𩨀𪮶驶镨𨟳床铒阶馋龀𡭬𦈖𩧭钸进𪭧谁释鲍𪢒潴买觃蛰㤽蚂𧹑𫚥暅顶鸩飒镪榈𪤚𫔄码厍轵带𫔆秾𫂆靥岚𫟶媪𫝭茏糇顽𫊮锧侧痈诔澛钜𫚤诤铤𨀱丢妩变𫗳𦈘椢爱芜觊𨸌溆伪齄谘铋䞌鹢鹕槠𪬯猪扫𨰿衔妆颓鼹书涤𫌀虮𫘯偻蝉𪠵勋剑掴稳鹱𨸃𪞝𣗙样歼螨𪵣纥𫌫𫖃𫟅虏鹾劢锜𬶍锳谫𫓰帼鲀𩲒钑俣𫄚忆盗辖鳘𫍽䘞肤钝钧荚𩙦胀荤𩧩𫎪唤誉誊䴗谄𫖖尝挟荟𨸉𩾂𫄵缵𩧸眬鲆皑尔氲𪨊肾𫄫荫应啧亲𩧺𨉗纼𣺼䦂抢饣谟锵鸳𫍹镃𪉄剥缬讪处锒𩧪潜蚬挠邹蓝𪮖𪨗贺邓𫘡㻏谪𫍵膑镎𫁲麸籼彟觌訚设𫄠娲𫄡财䅉鲲痖镑哓岘洼䦷镍桤𫚨执𫟃奥锕邮𫘱𫐒𫏨涧𩰰螀𫟆䓖砖础亿鿔电号轳𨐊𪉎耢㱩𪽮闻𩐀塆隶馁寻绁𩯒𫏋诫驻状蓠浆阖𫏌溅谵撸账对锄阊𫔰缁𩧰𫑘𣎑闭莸尴丛归𪉈翚诇𫓨痴䇲戗瘾𫞢锣颇况𠀾𫁂蝾偾汇馆𫗬帧谂缇脚怆腭𢧐𫔭鲖贵赜讻鹓晓踌𪨩览㧑泽桨桪辚𨸅咝𫇽𧳕𩠉两纳赙𫌋𫗯辩聩鲼鹠𫍞𫛶𥮜听绳祸𫔇锚舆牍𠉗鹃岿绪鹊异𩾈䞐缪𫖰体𫍿焕𫄛𫟹砗郏𫔲掳澜锫轸狱鸭𥩺𫗣痒诐𢫞铞轩运鸱穷琏逻桢𪢸瘅残翘斓锯𫖅郓挜蕰蒋赟蛱𪫷难缐贡𫔶𫛻鲾傧蚕𦈐𩙫亚缩挢𫇘𨐇缢担䥾锪檩绥莲𫜫峃验𫔵轷缨𩠀扪𪉉𪤄纾𫛾铚𬭳兹庞惯丽𩾌镴鹉虬垱闹优橹鳝𢫊𪔭谖𣳆禀𪰶襕𫅭𫐓𫖒𫘨嫱饳锺鲈颙驵错玱连𣲗绰𫄞庄惮箩𡋀迟罴庆贼𪠽构𫚐𪧀𫜬鳞缓箓𫐙觏𦈙钦𫛲圆栖鲝匦霁擞绺𪉊䌾鹥蚀蛴𩧻硵铄㛤滗钭镥谮焖腽叁荪铂肮纴𫠆丝驰标剧𪉆烂鳋锛𫗨𫐈𪴙咏𫛞锶蹑籴拟撑𫠏嬷续𫖺囵赡𫆫𫛣当𫕨𩨍𫟼扩镣贬贫饯须𫝈啬规𥅘𠵸韪䦃𫛳𩭹馇双𫎬鹴辕𨱒𫕥庙诖𫔎觍铷语𫔁潋闲缲戆𫇪赚韬浃𫛦𫘟胨硙浈缊忏颐鹁濒纬诘𫖬诹谙馂导铘䥽绡舰𫠂𦈟聪张宾骡径军𠲥𥬞癫贶监栌铟拦馈䎬𣸣𦈕挛糁冯篮𥅿𦈓报癞𫂈𩠌廪鹍阑𢙏镂轪㳢唠枞馓饰𫄜羁泞围绒旷丧谨𫅥𫌇𫓱鳐𫠐𪩛糍栀㴋沧铡𫞝侦𫄥槚𫍪𫜟𪪑𫋹悬顺颉𬶟𩨏𫘜数锹冈鳃诩块𩓋𬬭闽诗踪帜颍试饽昼𫓯𬭛彻蓥总辽侬颜诏训麦𤇭𤞃𦈔𫐗刬茧𠯟满𩧲缋鹋𫚢鸹飕贤税访𫝨屃颣护仓稣镤阆铼鲛𪺸闿㧏畅郑间㻅鹗愦远裤鹀𫐋𫕚𦻕佥阓荝盖罗锋伣𨱑浏谡䌺𫍥𫐅𫜂经绋谕测𤆢𫢸炼鲢㓰园锖𪜎𪠳俫轭渎骂𣆐圣𧹗鳤𫂖𣽷缅鞑讳邬绻摈阘鲅跷场捝谰抟铴缠阌呐赕齑嗳𦈞𫍰脉𤎺鹂𫚩谣噜跸犹迩𪭝莺脶够䌼𪎌𪡃鹘𫗥𥅴袆许达鲨阇𦶟𫋇袅馎阐阙𪟎𫛰蕴锇凫鲥𫔀珑耻选偬决骜䜥韧𥱔榄褛滠狞𩠂温𫔖䴙掼𤞤镡𫘠话网㭎迁鹙𡳒巯荠龟𫘤𣗋帱𫟢殒恻继𫔈𨡙𫎭舣踯币驲烨贞芈𫘮驹镚惫钔懒𫗇绝岭𫛮跻浇钆𪨷瘿𣶫铬𫜀萤湾夺来𫄸𫟟泺钇奖铺骔缙琐𩩈锨疗椝辁凛𤾀𫊪𫑡荛开𫐐氇资侩𦈜𨱋凯装𪡏鹏𫃗鹡𩾀飘𫍴刭𪭵怅过铮鹄𥮋刿𦈏𪨹轶绾钙瘆锬𪽴浅鲣𫟇𫜄𦼖袄怄苈观为赛晕挦饭侨霭𫄲冻肿𪩎债师昽𫖕舱垒𢽾敌辗岖祷𤻊屉铉𩧶诒唝骐𫌯窎呓诮䙊𫟫锗诵铃籁𪎈颀赂𫟳骛麹㲿识辑银鲊赑莹𫍫彝𫓺抛䘛营𪉔𪺪㓥𩾃䦆跞𫟺垲绕鹣药现郦𨰾点谈胁谎萨莅缑龊终赢𩠁鳢𪮃𫚑㟥殁𫚧𤊀扬𦈒戋𫍳𫎫袯𩾊𫐊𫝵赋锎虾𦝼𢘙贽跄𫜊涩拧𫜮谯琼啰泸遗𪫡霡𪉕狲𪽪烫𪭯闵𫔉𫘩虽图谜钼饶欧鸬巅鳇笾𫄯𫘫员橥缮讶䌹𥆧𫖫赝独哕谭卢𨑹厮𨱇𫐍骈𫄶绞𫍛䂵综厨届岳纨饦鲸𧌥屿凤𪹳沣𫚓𪾦蟏鲪𥞦叆𫘽档𫚍婶绦钚领𫗠误𫀬励烟纶𧝝㐹㗷群鸮𫔕柠阚谬𫇴𫐇唢滪坜订骦𫜯净𫗞锂阏𨸄鸴撄鸡𫐉戬茎谝尧驺𪟝喾钘怀涠鲦𪾔𫄨𫜕谑荥缂气𡍣𪉅赶猬鸣殴𫘪𫛟挡该饵唛玙缈转违髅𫟸贝钵伤垅冁铯𫮃缧拣𫓥𫞧龂㛿萦奂𪪏𩽺𫚘脐辇毙兖狭𫀮泾诂诙𨸀砾蚝渐䌶萧贮𨅫𫜩祯皂簖眦缘拨牦贴锡𦈎𫘧鼗鸺弪窭伛脓区褴怜莶粪轾𣐤弹𥫣锿𫄱备纡赖给䦶绉锠锻窃玛𣍯裆𦨩岗诌恤凄讧赍骥𩬤缔缗钛𫗫贩闺𩖕𫄹飔择蔂猃䥿慑梾坏虑众陦黡辋钿䴔毵㭤绂诺绸箨𥬀诿锱𫜃𩨊阉寝谛轧饺鬓𫞩瑶𫗱边驿镕倾詟绍𫠑𪡞饩𩠎钯搂锤硖埯𠰱𫌭𫍾碛节荨携𠆲讴俨谀璎诱卫轺辄𣏢䴖𦰏辂颡𫚊查绷鱿烦𢗓𪥿𪹀搄驸邺饬禅阳鹑诶项𪨧𫗦𫙂锭㥪龈鲵孙𫗈𪶮䲡传纤炉𩏽𤿲谍鸢𫛤践鱽𫝪锉馒鹲𨱌绠𫌨统疱鳂𫔯鹪鲤讼𩨇锌讽击𫏆骤𫠇𪠸盏吕𫶇𨸁𫍸𫔑锅铌龉𫄙县㧰銮𫗡𩧬蝼䉤证钒浕俪铢宫𪉃𫖯撷坛黩秘馔𬶋飑𫋻惭坚愠荮觯鳓𫁺𫜒颢墙阁组轲污蒌颛鳆䲟𣃁鳀咛茕绢谓诳傩浐镇鹩𢙓𫗩锰辀𫜪𪡺赣谤𪿞癣𫍣𫍼𫗭啸𫝧𫚈𦈠𤽯𫄰谶搁橱𩾁𤇄蒏咤暧龙鲕颁鸯娅疮𦶻𪎊断鲂鲔𨱅𧏖飗没迹𣘓𦈋阍䯃纵𫚫绅阎䯅辌葱𪎉𫘝𫛛𫟤舻辆𧮪头𫀌练𫜁𩧱呖赅缀𨱄䏝义锓镊递镜𡒄𣈣𫚭缳骆𫠒伞𪵑𫚜猕纩赘𪉏恒𫛴鲬蛲讹𩽻𪠟𪡛𫓭静𪠀胆𤎻离陆韫论线钰树𫚔鹰䢂帮斩𣓿颒𢙑𫂿𫔮矶榇诓拢𪷍殇锲𫚎𪥫团逊刘涢铆颗𦈌𦟗凉驭𥩟𪿊䓕氢鲏茑𦈈傤鹜𫓶伫烩约呛钹鳈𪠡𫍩栎𥐯筛颕眍𫖵潍邻尽饪环屦贾钊𥭉𫟞铵囱镏鲗镆𩠋鹎虚㟜锍鲰𫛬亩摅㭣娇箫艰筝哝𧹒灶𫔃纪碜矾缛轹矿织简陨辎雳𫇛𫚡挚𫠜饥𩠅𫓦诠铝𫖮讥蕲镙鸠𩠇沪帏𫓩梦闶𫔊𫟄㳠捣预豮会娱𪳗𫎩𫘭浓𫛽𫅼𪷽窜阃䌷椟驼䥺厩𪺭岽纭觋兽摄蛎𫛵㶽𫔏𨱈骞鳑蛳𥹥𫀓讲剂负鲧𫋌𫞅绖缎编𫗋镢𤇃灏雾疟𫗧鹧𫖸炖胄𫓻颥𫛭铜铲𤳄𫟵镠㧟酽鸵绛废壳罂鲑诽𫚌质𨱏涞录㐷陉铹𩨎𫐔罢劝涚疴𡞱𫛨𨅛滢榅溇钢馐掺条页𫞗峄伟铫𥧂𣘴题纸𠮶𤆡帅溁𩠈垦睁𫍷𦈝飏跶𫍶诎䦅驴骣颞钕酦刚掸顼𪻺挞𪩘𫎳粤轿衬颧䲠额䙓讬绎𫟾鲚饻侠盘赌鸤绘袜镘个缤腼樯𫖪䀥绬鲇𩖗𫎆𫐷趱𫘰𠇹鸟铛遥闱屡𫖔镀𫄪粮镈嘱鲯鹌词艳钗𫈎𫜑𡺄𩽿们挣𫚕𦈗𤊰𫁡鲁呗攒缒毶联雏㳕压滩喽疬箦砻储𫟲㘎彨觅岂崃庑𨅬潇𪺷亏𪳍齐桦𫗊䜩慭显毂绿骃𤋏𫎸𠛾𫠀记馑蚁𩧯岁饷呒飙䓨诲姹抡犷厢阵滨谲𧝧𫂃魇坠馍狯鞲𪵱𫛯㚯绌𫞥东𫞠晒罚枢𫍟𫑷𫓿鲡检缫䩄针偿鲻𨱖𫍐侥棁𪱥厐砜华敚嘤𩽼彦鹅惬𤙯䲝骏锆坟𫔅𢘝谳汹蘖𫝋氩㺍见𧹓赏骀𫍚𫛫峥篯诉𩨋颏苁匮嚣涡𣑶䍁苔𫐄镁惨触侣苎缜娆频镅𪥰𫍭𧉐岙学绚粜贯翙议诚𫔂䍀铓骒轴镮镶𨂺峤馊搀闸详骊绽啴镩䌿让纠睐埙𫛝𫚬𫟡将焘槟垯胧𫚛仪扑晋𫆏诬斋鸫𪽭瘘鳏厣𫔍𣱝𪯋垩𠛆鲽赠儿钷䢀𨐅炽𡭜颌铎敛鿏绑铭𫐏锔𪸕蔷赈庼盐𨱂𣘷𩠠𩨌𪭾𪉓阕𫄦怃卖恽辐馄裢旧𩙮讯纣疠诡𫠈捡铗鞯哒拥职鳟参𫁱门骎贠鲟𨸂𫝩莴筹缝榉镱鲳𫚟隐尘讱㶉饱鲭𫚝说蒀玺笔馃酿骘涨鳗𫍠砀肃闬𪮋𫖶嫔娈𣚚临郐补闾觐悦钪硁𫘛珐䌽洁滚贰𫔽䦀瘗饿玚鼋𨐆䶮桥𫛠镗宠娴浔车耧𪮳𪼴𫚖骟坝鬶请𪩇强颖讷钡钶背龆𧉞颠𫓵虱谊栊厦抚缕梿𪫌缣衅㳔辊肠铙绹愤辔恳滤幂瞒𫍮骅𩽽昵𫐘辫镲乱𤦀𫅅𪸩𫓫呙殚稆𪲛桠秃谐𫐆琎𫐌铦靔阄壶态产䝙贱锈机瓒缌纺养棂骇读俦铪篑妈窥铰猡滟骍岛𪢠𫐕𬭶谇鲒沥谔𫚠载蓟钞𠯠婴餍𫛢𫚏躯钲祎烁𫛱秽叙钤龁𫈟𨐈𪩷𫍡凭𨱁绤毁锴轻侪泼痪𡥧垴荜躜轱钱揿𫇭𫟴齿阴馉举谠𪻐蒉𣞎𩬣妇𩾄赪懑媭浊鳣𡞋纷㑇鲎䓓骢孪濑紧赁画毕较礼瓯椤绲穑𫍧贪哙皲𫠌牺鳒晖谥𡠟𩨂痫𪾸蹿热㭏国𫟿𥎝𪣒𫗤颃费胪𫜳兴渑栈闼业獭𩾇𫖳𨱀逦腾䌻𧿈窍𪉋户势𪺻饲鳎亘𥐰蝈枫谌飨鲹蝎酝𢙐蓣𧑏𩙨痉𫓮闩垫𦛨𪫺枨裥钠𩧦评诪𬀩鲮积镯𧏗鲴楼胫𫄮灿栋苇伥鳖𡋤妫渍酱长赓硗𩾎晔购渔软𧹖𪩸钬𪬚镵㑈𫄝𫍝谞汤桩纫𪨶𫓾宝垭恋穞𪢌𫓽𬭊贻髌䲣荧羟滞𫋲关𫓧鹮椠𫸩痨𣭤𩽾损𫛥响劳阔恺恼酂骋绶挥怿脍筜擜𫄟诀嵚跃𪥠饹𫓼苏𠴢责腻蛮𪲮𫄷鹯婵铽叠𨱍厅钥鹔缏译𫛧级姗际饼𩙬鳕𨱔唇鹚乔戏𠛅秆𪚐𫔓𫘣镉颂叽鲃𧜭别靓颎狮沦羡䙌藓亸荩锑𪹹赆谋骚𩠆蓦陈删𫖭哜𦈑𪉌𫓴铅沨𣲘历𦈚𫄢认𫘥𩙪枥换疯铏𨸎𫖓鲋钩鹤专𫞚铈旸销矫聂贲赔𫟕𪡋镞𥐻霉骗瞩铖睑𩨁㶶颦赇驱鸾俩鲜迈鹦轫咙鸲铨颔鹇𪢖𫔔𪣆吗笋𫔴杨疭刍横鉴𥺇键缡𩙰槛雠铁𩠊诜𤈶饫炜鲿鹆篓谱鲫𫔒𫗵嵝𫝫烃诛钣𩏾闰啭缞𫜨㑔铧捞鳉鲺笺赵鲞狈𩨐𫠊锸𫝦𪪞烬讦𫎧𩾋𫈵𢫬鳌毡闳笼𢭏㨫哑飖巩灵诃𢢐㖞𫆝栏铍𨸋货鸸龚莼牵谧怼鲙蔼谴缃𩙧㖊泻蜕椫鹛锦库戯𨱊钾㐽𫛡辒输炀竖犊昙𪭢𩧮卤枣类赗鲠鿎趋𪉍萚𠚳镄铕𫟑𪼋乐鳚粝讨驯𫄩𫍙䜧衮鞒绐顾峡韨𣔌垆鳜𨱃𩏼劲窦恶栉医萝鳛瑸缍锽鲐剀𫛩骑层䞎鸰𠰷队𫄬帻瘪蒇䌸绀𪿫䗖𪺣渗苋吴猫铇𪪼𫝬杂𫓷讠麺帐阒钟𪿵腘𩨅㔉锾铿𫏕闪娄汉𫟥鳍𫐑鼍铥㤘钋镒𥐟珲𩧫𪎍鸥纱柽韩𤇹铸𦈡𨀁煴𥇢𡋗𪽝𫄴𩖖㛀侭䍠䴓𫗢裈鹳㳽绔蜗㻘缟纽谗𫟷悭𫞡嘘𠊉跹𫚉珰钎𫟦𩡖蔺沤铔闫与脱闷𫖴篱颚吨颋铑玮签脑潆脔勚惧谒苘阋铀锢忾芲铣镦𫊹垄驾𫖱𢘞𡳃钅𫖇䲢饨绩乌壮鲱𩨉榝𫓲荦谦荬钖钐薮黪𩏿絷鹫谢镧鸼𩧳𤶧𪻨𫄳灭𫏑赃䢁箪鸿轰觑𫠅渖祢𫖲鲩绨则𫠋沩龌铊纹吓渌绫浒枧狝芗俭声哗诅㛟镳钴滦宪寿灾飞鳠觉鸪𪲎𫊸𫖹疖筚𢠁𫓳瘫诟饴馀𦈉鹨鲶𫓹济𨱓芦𪎋诈𦈛荞𪧘搅𫓪峣呕𤶊镌𩨈𫄧减卺𫉁铳𫍤𪉒鳊𫛜缯𫍺钌幞诸芸喷竞谆审饧笕𪽷𪡀𫘦并战轼𨱉㳡谅颊𫅗谉𫗮錾趸𪶒赒驽觇崭𫗪鹖栅唡峦厉献镓裣赉伧鹟邝𨠨𪣻飚耸哟骁𨸘𫛪写洒𣍨无𪱷惊荙𪾣𫍲㓆缭脏𫟠细𨡺𣨼𫚗启钏𧒭㛠陧𩽹𪹠呜恹髋𩙭鲌镫碍馌𥬠习颤刽䜤兰𬬻𫷷㡎险𪑅𩧨骙㭴𫎨农郸𣺽𨸇冲壸𫘞𪉂𢬍𨸊镝鱼缆铠阅爷镐镔𫛹瞆狰办亵䅪创属砚颈莳渊诊庐辅苍辈辍缚轨猎𪉑殡浉䅟𡶴阈𦍠𤝢谏辙枪𣯣梼𣒌暂蝇术𬶏纰𣐕𫄣钓崂沟辞计辘堕𫚋锼𨐉诼𫎦啯欤䯄𪻲𫗴𩙥铐蛊红风𪚏锃钨脸𫞦夫筿蛏调窑𩠃𩨆讵𫚪弥嗫鹐胶㟆摆𪽈𩙯骧𪾢泷龃阀𫠁杀奁纲膻课钍𪢐硕𫄤堑臜悯饸郧锘哔匀阂𫎌㧐𣶩𩾆𨱎𫟻骖𫛸𫜓涣𫛚称峰纻涟铱𫔌挤阗𨷿弯啮𫍨弃圹𫝮犸镋骕𫊻荡𫌪𩙩驷傥鹝仑务泪栾𫠖𩧿𫛷迳埘锞𨱐凑扰飐镖𫖷揽绵辉粽谩𢬦袭纮撵顷𫚦䴘抵纯茔𫉄讫𫍜鲘𨱕龅𫍦椭𫗰𪪴𫰛𩧵𫏞抠窝𢋈链𫟬厕𫜲埚叹贿钉𫖑缰贸泶𣍰𫛼缄婳鸶𨤰却单𨱆䞍欢𨄄砺鸨鸻伦敩觎驳忧马䁖馏这䲞诣诞颅鳅𠱞诨鲓𫋷揾诋蚃飓锏𠡠恸𩾅𡸃龇内𪢕刹蹰兑闯聍鲄镬𫌬𪲔教贷禄谚莱':
    CN_MAP[ord(k)] = 1
    
for e in range(ord('a'),ord('z')+1):
    UNICODE_LANG_MAP[e] = UNICODE_LANG_EN
for e in range(ord('A'),ord('Z')+1):
    UNICODE_LANG_MAP[e] = UNICODE_LANG_EN
for e in range(arabic_low,arabic_upp+1):
    UNICODE_LANG_MAP[e] = UNICODE_LANG_AR
for e in range(jap_low,jap_upp+1):
    UNICODE_LANG_MAP[e] = UNICODE_LANG_JP
for e in range(kor_low,kor_upp+1):
    UNICODE_LANG_MAP[e] = UNICODE_LANG_KO
for e in range(chin_low,chin_upp+1):
    UNICODE_LANG_MAP[e] = UNICODE_LANG_CH
for e in range(kor2_low,kor2_upp+1):
    UNICODE_LANG_MAP[e] = UNICODE_LANG_KO
for e in range(hindi_low,hindi_upp+1):
    UNICODE_LANG_MAP[e] = UNICODE_LANG_HI
for e in range(kannada_low,kannada_upp+1):
    UNICODE_LANG_MAP[e] = UNICODE_LANG_KN
    
    
    
    
    
UNICODE_LANG_MAP_py = [int(e) for e in UNICODE_LANG_MAP]

def get_unicode_lang(str c):
    cdef int o = ord(c)
    return UNICODE_LANG_MAP[o]

def get_cn_proportion(str string):
    cdef int tot, i
    for c in string:
        o = ord(c)
        o = CN_MAP[o]
        if o == 1:
            i += 1
        tot += 1
        
    return <float>i / <float>tot

def get_unicode_langs(str string):
    if len(string) == 0:
        return []
    cdef int o = ord(string[0]), last=UNICODE_LANG_MAP[o], h = 0, k = 0
    cdef list result = []
    
    for c in string:
        o = ord(c)
        o = UNICODE_LANG_MAP[o]
        
        if not (o == last or o == 0):
            result.append((h,k,last))
            h = k
        if o != 0:
            last = o
        k += 1
        
    if h != k:
        result.append((h,k,last))
        
        
    return result

import re

emotion_img = re.compile(r'<img alt="(.*?)" src=".*?"/>')

url_matcher = re.compile(r"""((http|https)\:\/\/)?[a-zA-Z0-9\.\/\?\:@\-_=#]+\.([a-zA-Z]){2,6}([a-zA-Z0-9\.\&\/\?\:@\-_=#])*""")

symbol_matcher = re.compile(r'([！＠＃＄％︿＆＊（）＿＋—＝［］＼｛｝｜；＇：＂，。／＜＞!@#\$%^&\*()_\-=\+\{\}\|\[\]:;\'"?.,<>]+|[^a-zA-Z ])')

hash_tag_matcher = re.compile(r'[#@][^\s]+')
count_regex = re.compile(r':\w+:|\[[a-zA-Z0-9=]+\]|[@#]+[^\s@#$%^&*\/\(\)]+|(?:(?:(?:http|https)\:\/\/)?[a-zA-Z0-9\.\/\?\:@\-_=#]+\.(?:[a-zA-Z]){2,6}(?:[a-zA-Z0-9\.\&\/\?\:@\-_=#])*)|(?:[！＠＃＄％︿＆＊（）＿＋—＝［］＼｛｝｜；＇：＂，。／＜＞!@#\$%^&\*()_\-=\+\{\}\|\[\]:;\'"?.,<>])(?:[ \t]*[！＠＃＄％︿＆＊（）＿＋—＝［］＼｛｝｜；＇：＂，。／＜＞!@#\$%^&\*()_\-=\+\{\}\|\[\]:;\'"?.,<>])*|[0-9０１２３４５６８７９.:;-]+|[^a-zA-Z ]| *[a-zA-Z-_]+')
count_regex = re.compile(r':\w+:|\[[a-zA-Z0-9=]+\]|[@#]+[^\s@#$%^&*\/\(\)]+|(?:(?:(?:http|https)\:\/\/)?[a-zA-Z0-9\.\/\?\:@\-_=#]+\.(?:[a-zA-Z]){2,6}(?:[a-zA-Z0-9\.\&\/\?\:@\-_=#])*)|(?:[！＠＃＄％︿＆＊（）＿＋—＝［］＼｛｝｜；＇：＂，。／＜＞!@#\$%^&\*()_\-=\+\{\}\|\[\]:;\'"?.,<>])(?:[ \t]*[！＠＃＄％︿＆＊（）＿＋—＝［］＼｛｝｜；＇：＂，。／＜＞!@#\$%^&\*()_\-=\+\{\}\|\[\]:;\'"?.,<>])*|[.:;-]+|[^a-zA-Z 0-9０１２３４５６８７９]| *[a-zA-Z-_0-9０１２３４５６８７９]+')

def simple_count(text):
    return sum(1 for _ in count_regex.finditer(text))

regex_cantonese = re.compile(r'嗰|啱|搵|靚|嘢|咩|嚟|㗎|嘅|哋|啲|喺|乜|冇|諗|嘥|咗|咪|吔|喎|唔|係|有返|我個樣|做左|玩左|返左|一諗|好彩|黎講|泥講|賣下野|等緊|麻麻地|痴晒|呢件|前排|睇下|好[多少小]|幾多|幾可|唔[洗使]|食屎|千[其祈]|呢次|邊一|[中鐘]意|只係|痴線|邊個|有無|點樣|好耐|收皮|[典點]解|[吖丫][嗎嘛]|吹水|返屋企|扯咗|勁揪|共存|十問九|條女|條仔|乸西|一撻即着|一身蟻|呃錢|生飛滋|乞人憎|回水|算啦|拎出泥|升呢|幾重|含淚|搞串|好多嘢|冇啦冇掕|一陣|冇面|除底褲|幾時得嚟|幾時得黎|幾時得泥|幾時得離|著褸|加細碼|唔係|論論盡盡|on9|搞搞震|對唔住|唔嗲唔吊|初初|泵把|過鐘|拗手瓜|手指尾|躝屍趌路|咩先|橫掂|家下|激嬲|個一舊|諗埋一邊|不特只|散仔|孭帶|耍家|幾多號|攬攬錫錫|當面|油炸鬼|攞苦嚟辛|隔籬鄰舍|奀咕咕|臭罌出臭草|禮拜|㩒錢|擦膠|極其量|出世|通氣|無得|冇厘搭霎|O嘴|得戚|攪錯|即係|搞錯|咁上下|一時時|唔怪之|執死雞|O咀|㩒𨋢|好路數|紕口|食大煙|隻抽|越嚟越|越泥越|越黎越|乜料|㩒lift|呢一度|點先|撳𨋢|撳lift|俾着|咁少|無幾可|既話|打籠通|是但|是Q但|不特止|俾面|事Q但|扯貓尾|點先可以|咸濕|老友記|鬼打鬼|到喉唔到肺|好人好者|好人好姐|幾好|腦細|馬嬲|夜麻麻|碌架床|夜媽媽|早唞|幾號|幫手|話頭醒尾|攝位|茂里|曬冷|戇鳩|聽朝|靚女|出面|生安白造|除衫|安樂茶飯|死牛一面頸|醫肚|落湯雞|豬咁蠢|埋單|順得人|散水餅|咁密|放工|車大砲|衰到貼地|手扳眼見|死開|濕lup lup|濕立立|好襟計|唔怪得|蕩失路|咁平|抵屌|落堂|放蛇|藤條炆豬肉|晒冷|食糊|睇水|戒口|魚蛋檔|戲飛|M痛|試吓|醒目仔|楋手唔成勢|嘔電|出年|𦧲口水講過|lur口水講過|執笠|曬相舖|舂瘟雞|直踩|大嘥|扮嘢|扮野|喊出黎|喊出泥|掟煲|咁靚|打冷震|捱驢仔|佗衰家|定係點|眼大睇過籠|粗身大細|除底衫|現兜兜|咁肥|哨牙|惡搞|碌卡|叮噹馬頭|肉赤|呢排|哩排|冷氣|頭先|啱啱|岩岩即係|對吾住|嗌交|咁亂|細佬|唔會|走廊|請食飯|唧係|阿蛇|講就無謂|睇透|諗落|懵閉閉|一天都光晒|成間|成個|千其|千祈|梗係|語言|中意|鍾意|唔知|唔要|唔好|吹脹|吹漲|折墮|馬騮|諗下|嘥料|硬頸|做吓|傾吓|傾下|講吓|講下|講吓笑|搞咩|搞乜|唔制|唔叫|乜嘢|乜野|做乜嘢|做乜野|費事|費是|落雨|滾水|基佬|溫書|返學|返工|屋企|睇波|睇路|揸車|搵工|搵大學|搵野|咁好|咁多|咁貴|咁快|咁慢|咁高|咁低|咁大|咁細|咁扁|咁厚|咁重|咁輕|咁聰明|咁蠢|咁瘦|咁疏|咁黑|咁白|咁紅|咁藍|咁綠|咁紫|咁灰|咁賤|咁樣|幾少|幾靚|幾貴|幾平|幾快|幾慢|幾高|幾低|幾大|幾細|幾扁|幾厚|幾輕|幾聰明|幾蠢|幾肥|幾瘦|幾密|幾疏|幾黑|幾白|幾紅|幾藍|幾綠|幾紫|幾灰|幾賤|佢哋|佢地|我哋|我地|你哋|你地|點搞|係咪|係唔係|邊度|邊一個|邊一度|邊一舊|嗰啲|哩啲|呢啲|果啲|慳啲|嗰個|嗰度|嗰一個|嗰一度|嗰一舊|個個|個度|個一個|個一度|呢個|呢度|呢一個|呢一舊|另一個|另一度|另一舊|扯火|爆粗|講粗口|喐D|喐一喐|喐泥喐去|喐黎喐去|喐來喐去|郁一郁|郁泥郁去|郁黎郁去|郁來郁去|聽日|今日|琴日|今朝|今晚|聽晚|前日|上個禮拜|下個禮拜|傾偈|打尖|電掣|大鑊|著衫|換衫|買衫|賣衫|著嬲|換嬲|買嬲|賣嬲|換褸|買褸|賣褸|巴閉|把炮|唔該|遊車河|事頭婆|發癲|唔通|火燭|執粒|伸脷|牙煙|低B|瞓覺|訓覺|慳D|慳返|慳埋|報串|唞氣|抖氣|唞下|嬲|好嬲|發嬲|抖下|反骨|反骨仔|冇得|起碼|樣衰|大耳窿|大耳lon|好多時|好多野|擔遮|一DD|多D|駁嘴|駁咀|除褲|除帽|除眼鏡|除con|食花生|屙屎|屙尿|抵死|玩嘢|玩野|黐線|癡線|老細|執生|怪唔之|發夢|同埋|事但|求其|直頭|仲有|唔怪得之|怪唔之得|點解|典解|宵夜|特登|突登|特燈|突燈|專登|出糧|酥蝦|櫃桶|打機|食飯|食面|食麵|點知|做乜|點樣可以|咩人|咩樣|咩原因|因咩解究|幾點|邊一日|邊一個月|咩料|俾人|比人|D人|邊D人|邊D|啲人|邊啲人|有邊D|邊啲|嘅原因|既原因|嘅解釋|既解釋|嘅狀態|既狀態|係香港|係澳門|係外國|係美國|係大陸|喺香港|喺澳門|喺外國|喺美國|喺大陸|好好笑|拎黎|拎出黎|拎泥|唔得|有乜|邊個work|呢個work|好唔好|好唔好食|好無|乜都|咩都|都係|有冇|比d|俾d|身水身汗|鬧交|紹菜|芥蘭|大佬|北芪|炮仗|細路仔|鬼五馬六|牛輾|手襪|下晝')

def get_lang_proportion(text):
    cdef int total = 0, portion
    cdef float v

    g = {}
    for s, e, lang in get_unicode_langs(text):

        if lang not in g:
            g[lang] =  0

        portion = simple_count(text[s:e])

        g[lang] += portion
        total += portion

    for k, v in g.items():
        g[k] = v / <float>total

    return g

from langdetect import detect as _langdetect
from langdetect import DetectorFactory
DetectorFactory.seed = 0
    
def get_lang(text):
    proportions = get_lang_proportion(text)

    if len(proportions) == 0:
        return 'en'
    
    lang = sorted(proportions.items(), key=lambda x:x[1])
    
    lang = lang[len(lang)-1][0]
    
    if lang == UNICODE_LANG_CH:
        lang = 'zh'
    elif lang == UNICODE_LANG_EN:
        try:
            lang = _langdetect(text[:min(len(text),200)])
        except:
            lang = 'en'
    elif lang == UNICODE_LANG_JP:
        lang = 'jp'
    elif lang == UNICODE_LANG_KO:
        lang = 'ko'
    elif lang == UNICODE_LANG_HI:
        lang = 'hi'
    elif lang == UNICODE_LANG_KN:
        lang = 'kn'
    else:
        try:
            lang = _langdetect(text[:min(len(text),200)])
        except:
            lang = '?'
        
    return lang


def en_or_zh(text):
    proportions = get_lang_proportion(text)

    en_proportion = proportions.get(UNICODE_LANG_EN,0)
    zh_proportion = proportions.get(UNICODE_LANG_CH,0)
    
    if zh_proportion > en_proportion:
        return 'zh'
    return 'en'
    
